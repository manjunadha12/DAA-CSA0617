from collections import Counter

def wordSubsets(words1, words2):
    # Step 1: Create a frequency count for all characters in words2
    # Initialize a counter to store the maximum frequency of each character needed
    max_needed_freq = Counter()
    
    # Go through each word in words2 and update the maximum frequencies required
    for word in words2:
        word_freq = Counter(word)
        for char, count in word_freq.items():
            max_needed_freq[char] = max(max_needed_freq[char], count)
    
    # Step 2: Check each word in words1 to see if it satisfies the conditions
    result = []
    
    for word in words1:
        word_freq = Counter(word)
        
        # Check if word contains all the required frequencies from max_needed_freq
        if all(word_freq[char] >= max_needed_freq[char] for char in max_needed_freq):
            result.append(word)
    
    return result
