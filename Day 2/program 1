def findPaths(m, n, N, i, j):
MOD = 10**9 + 7
dp = [[[0] * n for _ in range(m)] for _ in range(N+1)]
dp[0][i][j] = 1
result = 0

for step in range(1, N+1):
for x in range(m):
for y in range(n):
dp[step][x][y] = (dp[step-1][x-1][y] if x > 0 else 0) + \
(dp[step-1][x+1][y] if x < m-1 else 0) + \
(dp[step-1][x][y-1] if y > 0 else 0) + \
(dp[step-1][x][y+1] if y < n-1 else 0)
result = (result + (dp[step-1][x][y] if x == 0 or x == m-1 or y == 0 or y == n-1 else 0)) % MOD

return result

# Example usage:
print(findPaths(2, 2, 2, 0, 0))  # Output: 6
print(findPaths(1, 3, 3, 0, 1))  # Output: 12
